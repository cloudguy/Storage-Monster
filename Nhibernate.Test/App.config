<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate"/>
  </configSections>

  <!--<hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    --><!-- an ISessionFactory instance --><!--
    <session-factory>
      --><!-- properties --><!--
      --><!--Nhibernate.Test.custom_provider, Nhibernate.Test--><!--
      <property name="connection.provider">
        NHibernate.Connection.DriverConnectionProvider
      </property>
      <property name="connection.driver_class">
        NHibernate.Driver.MySqlDataDriver
      </property>
      <property name="connection.connection_string">
        --><!-- Found from http://www.connectionstrings.com/mysql; note that the 'dev' and 'test_password' 
    match the user we created, and 'products' matches the Database --><!--
        Server=localhost;Database=storage_services;User ID=storage_monster; Pwd=123456
      </property>

      --><!-- Will automatically create a fresh table each time we create an ISessionFactory object --><!--
      --><!--<property name="hbm2ddl.auto">create-drop</property>--><!--

      <property name="dialect">
        NHibernate.Dialect.MySQLDialect
      </property>
      <property name="show_sql">true</property>
      --><!--<mapping assembly="mysql_test"/>--><!--
    </session-factory>
  </hibernate-configuration>-->

<!--<hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    --><!-- an ISessionFactory instance --><!--
    <session-factory>
      --><!-- properties --><!--
      --><!--Nhibernate.Test.custom_provider, Nhibernate.Test--><!--
      <property name="connection.provider">
        NHibernate.Connection.DriverConnectionProvider
      </property>
      <property name="connection.driver_class">
        NHibernate.Driver.NpgsqlDriver
      </property>
      <property name="connection.connection_string">
        --><!-- Found from http://www.connectionstrings.com/mysql; note that the 'dev' and 'test_password' 
    match the user we created, and 'products' matches the Database --><!--
        Server=localhost;Port=5432;Database=storage_services;User Id=postgres;Password=123456;
      </property>

      --><!-- Will automatically create a fresh table each time we create an ISessionFactory object --><!--
      --><!--<property name="hbm2ddl.auto">create-drop</property>--><!--

      <property name="dialect">
        NHibernate.Dialect.PostgreSQL82Dialect
      </property>
      <property name="show_sql">true</property>
      --><!--<mapping assembly="mysql_test"/>--><!--
    </session-factory>
  </hibernate-configuration>-->

<hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <!-- an ISessionFactory instance -->
    <session-factory>
      <!-- properties -->
      <!--Nhibernate.Test.custom_provider, Nhibernate.Test-->
      <property name="connection.provider">
        NHibernate.Connection.DriverConnectionProvider
      </property>
      <property name="connection.driver_class">
        NHibernate.Driver.SqlClientDriver
      </property>
      <property name="connection.connection_string">
        <!-- Found from http://www.connectionstrings.com/mysql; note that the 'dev' and 'test_password' 
    match the user we created, and 'products' matches the Database -->
        Server=P7H55\SQL2012;Database=storage_services;Trusted_Connection=True;
      </property>

      <!-- Will automatically create a fresh table each time we create an ISessionFactory object -->
      <!--<property name="hbm2ddl.auto">create-drop</property>-->

      <property name="dialect">
        NHibernate.Dialect.MsSql2008Dialect
      </property>
      <property name="show_sql">true</property>
      <!--<mapping assembly="mysql_test"/>-->
    </session-factory>
  </hibernate-configuration>
</configuration>
